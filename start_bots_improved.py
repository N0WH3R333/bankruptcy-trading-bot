"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
"""

import asyncio
import logging
import threading
import time
import sys
import os
import signal
import psutil
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from log_config import setup_logging
from config import LOG_DIR

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = setup_logging('bot_launcher')

class BotManager:
    def __init__(self):
        self.main_bot_process = None
        self.admin_bot_process = None
        self.auto_messenger_process = None
        self.running = False
        
    def check_dependencies(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
        logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
        if not os.path.exists('.env'):
            logger.error("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ env_example.txt")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
        try:
            import telegram
            import requests
            import dotenv
            logger.info("–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            return True
        except ImportError as e:
            logger.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å: {e}")
            return False
    
    def create_directories(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
        directories = [LOG_DIR, 'data', 'backup']
        for directory in directories:
            Path(directory).mkdir(exist_ok=True)
            logger.info(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {directory} –≥–æ—Ç–æ–≤–∞")
    
    def run_main_bot(self):
        """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞"""
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞...")
            from bot import TradingBot
            bot = TradingBot()
            bot.run()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞: {e}")
    
    def run_admin_bot(self):
        """–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–±–æ—Ç–∞"""
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–±–æ—Ç–∞...")
            from admin_bot import AdminBot
            admin_bot = AdminBot()
            admin_bot.run()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–±–æ—Ç–∞: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–±–æ—Ç–∞: {e}")
    
    def run_auto_messenger(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π...")
            from auto_messenger import AutoMessenger
            messenger = AutoMessenger()
            asyncio.run(messenger.run_scheduler())
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
    
    def monitor_bots(self):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–æ–≤"""
        while self.running:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–æ—Ç–æ–∫–∏ –∂–∏–≤—ã
                main_alive = self.main_bot_thread.is_alive() if hasattr(self, 'main_bot_thread') else False
                admin_alive = self.admin_bot_thread.is_alive() if hasattr(self, 'admin_bot_thread') else False
                messenger_alive = self.auto_messenger_thread.is_alive() if hasattr(self, 'auto_messenger_thread') else False
                
                if not main_alive:
                    logger.warning("–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")
                    self.main_bot_thread = threading.Thread(target=self.run_main_bot, daemon=True)
                    self.main_bot_thread.start()
                
                if not admin_alive:
                    logger.warning("–ê–¥–º–∏–Ω-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")
                    self.admin_bot_thread = threading.Thread(target=self.run_admin_bot, daemon=True)
                    self.admin_bot_thread.start()
                
                if not messenger_alive:
                    logger.warning("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")
                    self.auto_messenger_thread = threading.Thread(target=self.run_auto_messenger, daemon=True)
                    self.auto_messenger_thread.start()
                
                time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
                time.sleep(60)
    
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...")
        self.running = False
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–æ–≤...")
        sys.exit(0)
    
    def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤ –ø–æ —Ç–æ—Ä–≥–∞–º –ø–æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤—É...")
        print("üì± –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: @bankruptcy_trading_bot")
        print("üîß –ê–¥–º–∏–Ω-–±–æ—Ç: @bankruptcy_admin_bot")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∏
        if not self.check_dependencies():
            print("‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞!")
            return False
        
        self.create_directories()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGINT, self.signal_handler)
        signal.signal(signal.SIGTERM, self.signal_handler)
        
        self.running = True
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
        self.main_bot_thread = threading.Thread(target=self.run_main_bot, daemon=True)
        self.main_bot_thread.start()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        time.sleep(2)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω-–±–æ—Ç–∞
        self.admin_bot_thread = threading.Thread(target=self.run_admin_bot, daemon=True)
        self.admin_bot_thread.start()
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        time.sleep(2)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π
        self.auto_messenger_thread = threading.Thread(target=self.run_auto_messenger, daemon=True)
        self.auto_messenger_thread.start()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        monitor_thread = threading.Thread(target=self.monitor_bots, daemon=True)
        monitor_thread.start()
        
        print("‚úÖ –í—Å–µ –±–æ—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã!")
        print("üìä –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: logs/")
        print("   - –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: logs/main_bot.log")
        print("   - –ê–¥–º–∏–Ω-–±–æ—Ç: logs/admin_bot.log")
        print("   - –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π: logs/auto_messenger.log")
        print("   - –ó–∞–ø—É—Å–∫: logs/bot_launcher.log")
        print("üîÑ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω (–∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ —Å–±–æ—è—Ö)")
        print("üì® –ê–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è: —á–µ—Ä–µ–∑ 1 —á–∞—Å –∏ 3 –¥–Ω—è –ø–æ—Å–ª–µ –≤–æ–ø—Ä–æ—Å–æ–≤")
        print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("=" * 50)
        
        try:
            # –î–µ—Ä–∂–∏–º –≥–ª–∞–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã–º
            while self.running:
                time.sleep(1)
        except KeyboardInterrupt:
            self.running = False
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–æ–≤...")
            logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            print("‚úÖ –ë–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        
        return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    manager = BotManager()
    success = manager.start()
    
    if not success:
        sys.exit(1)

if __name__ == "__main__":
    main()
