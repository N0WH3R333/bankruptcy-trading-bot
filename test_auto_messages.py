"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import DatabaseManager
from auto_messenger import AutoMessenger

def test_auto_message_scheduling():
    """–¢–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    db = DatabaseManager()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 123456789
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–µ–¥–∞–≤–Ω–∏–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è
    has_recent = db.has_recent_auto_messages(test_user_id, days=14)
    print(f"üìÖ –ï—Å—Ç—å –Ω–µ–¥–∞–≤–Ω–∏–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è (14 –¥–Ω–µ–π): {has_recent}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –ª–∏ —É–∂–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è
    has_1hour = db.has_auto_message_scheduled(test_user_id, '1hour')
    has_3days = db.has_auto_message_scheduled(test_user_id, '3days')
    print(f"‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ —á–∞—Å: {has_1hour}")
    print(f"üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–µ—Ä–µ–∑ 3 –¥–Ω—è: {has_3days}")
    
    if not has_recent and not has_1hour and not has_3days:
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        db.schedule_auto_message(test_user_id, '1hour', 0.02)  # 0.02 —á–∞—Å–∞ = ~1 –º–∏–Ω—É—Ç–∞
        db.schedule_auto_message(test_user_id, '3days', 0.02)  # 0.02 —á–∞—Å–∞ = ~1 –º–∏–Ω—É—Ç–∞
        print(f"‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}")
    else:
        print(f"‚ö†Ô∏è –ê–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id} —É–∂–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å –Ω–µ–¥–∞–≤–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    pending = db.get_pending_auto_messages()
    print(f"üìã –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {len(pending)}")
    
    for msg in pending:
        print(f"   - ID: {msg[0]}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {msg[1]}, –¢–∏–ø: {msg[2]}, –í—Ä–µ–º—è: {msg[3]}")

async def test_auto_message_sending():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("\nüì® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    messenger = AutoMessenger()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π
    text_1hour, markup_1hour = messenger.get_auto_message_text('1hour')
    text_3days, markup_3days = messenger.get_auto_message_text('3days')
    
    print("üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ —á–∞—Å:")
    print(text_1hour[:100] + "...")
    
    print("\nüìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 3 –¥–Ω—è:")
    print(text_3days[:100] + "...")
    
    print("\n‚úÖ –¢–µ–∫—Å—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π")
    print("=" * 50)
    
    try:
        # –¢–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        test_auto_message_scheduling()
        
        # –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
        asyncio.run(test_auto_message_sending())
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –ß—Ç–æ –±—ã–ª–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:")
        print("   - –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        print("   - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("   - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
